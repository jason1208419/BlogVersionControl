@model CSC348Blog.Models.Post

@{
    ViewData["Title"] = "Post";
}

<h2>Post</h2>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Content)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="EditPost" asp-route-id="@Model.PostID">Edit</a> |
    <a asp-action="postList">Back to List</a>
</div>
<div class="comment-section">
    @{
        await ShowPartialView(0);
    }
    @foreach (var comment in Model.Comments)
    {
        @if (comment.ParentCommentID == 0)
        {
            <p>
                @comment.Content --- @comment.Creator --- @comment.CreationTime
            </p>
            <div style="margin-left: 20px;">
                <h4>Sub Comments</h4>
                @{
                    await ShowPartialView(comment.CommentID, comment.Creator);
                }
                    @foreach (var sc in Model.Comments)
                    {
                        if (sc.ParentCommentID == comment.CommentID)
                        {
                            <p>
                                @sc.Content --- @sc.Creator --- @sc.CreationTime
                            </p>
                            await ShowPartialView(comment.CommentID, sc.Creator);
                        }
                    }
            </div>
        }
    }
</div>
@functions{
    public async Task ShowPartialView(int id, string creator)
    {
        await Html.RenderPartialAsync("_MainComment", new CSC348Blog.Models.CommentViewModel { PostID = Model.PostID, MainCommentID = id, ReplyTo = creator });
    }

    public async Task ShowPartialView(int id)
    {
        await Html.RenderPartialAsync("_MainComment", new CSC348Blog.Models.CommentViewModel { PostID = Model.PostID, MainCommentID = id });
    }
}

